unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
BASH='/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin/bash'
CONFIG_SHELL='/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin/bash'
export CONFIG_SHELL
DETERMINISTIC_BUILD='1'
export DETERMINISTIC_BUILD
HOSTTYPE='x86_64'
HOST_PATH='/nix/store/wdap4cr3bnm685f27y9bb6q5b6q18msl-coreutils-9.5/bin:/nix/store/032xw8dchwjipwqh6b3h70yc3mcmsqld-findutils-4.10.0/bin:/nix/store/dd7xqz1qwl0di4zb8rzj7r1ds8np9xqs-diffutils-3.10/bin:/nix/store/bffnm1211li6y431irplzbjbccr0k884-gnused-4.9/bin:/nix/store/4lbfasv335vpk8rbcf3pgkag4rhg8jx8-gnugrep-3.11/bin:/nix/store/xpzl2sf58fqfpl64b1fy1ihxay7k71li-gawk-5.3.1/bin:/nix/store/zlmk040fc3jax9s3gldwp5rfwc1hhajc-gnutar-1.35/bin:/nix/store/chwdy9qaxd13q8zvl0zd5r7ql2q116di-gzip-1.13/bin:/nix/store/hpppxlcfvjzrvvcvhcm47divp65gbwq1-bzip2-1.0.8-bin/bin:/nix/store/y0akgyz13jgxwm968bs8kay47zbxx638-gnumake-4.4.1/bin:/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin:/nix/store/apqwjgbjj646wk2jkzr67l26djamn481-patch-2.7.6/bin:/nix/store/rrv4bd5i7rp2m7j8ix4kl8bzijhh8gd3-xz-5.6.3-bin/bin:/nix/store/qraqns84wjffzd8d3dgbdcyxg41czbd6-file-5.46/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LINENO='76'
MACHTYPE='x86_64-pc-linux-gnu'
NIX_BUILD_CORES='22'
export NIX_BUILD_CORES
NIX_CFLAGS_COMPILE=' -frandom-seed=9dawlbrml3'
export NIX_CFLAGS_COMPILE
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_LDFLAGS='-rpath /home/zak/work/hbc/boost/hr-py/outputs/out/lib '
export NIX_LDFLAGS
NIX_NO_SELF_RPATH='1'
NIX_STORE='/nix/store'
export NIX_STORE
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/nix/store/0hdv53rz22ymihpgl8d3w6hx57sgjl1w-python3.13-pip-24.0/bin:/nix/store/4nj4l3scr96gcx4jirb3kfv24c4ay1z7-python3-3.13.1/bin:/nix/store/x1grjqmng6z1b9wv1r5h9yjllyllrff0-python3.13-numpy-2.2.2/bin:/nix/store/2k0k06802k1xl861qd3wjg7ayh3y13da-python3.13-fonttools-4.55.3/bin:/nix/store/5h070f98azxb90ald9d7zg8i3zlxb7m4-python3.13-kaleido-0.2.1/bin:/nix/store/q6b50jn7kbbp12vjc7vrl0yvpbw0lq2j-python3.13-charset-normalizer-3.4.1/bin:/nix/store/pr73qcm86yd5mn65rz8g6m9000k185ly-python3.13-httpx-0.28.1/bin:/nix/store/qvba0avh26rrvbc8i32pywakg27fqpz4-python3.13-jupyterlab-4.3.4/bin:/nix/store/hyxagvvmlxjrmp042cwbvg2kd6rnbdwl-python3.13-ipython-8.31.0/bin:/nix/store/xgawj9ip2cwgx9bc6dapz4x1l5xvpv6q-python3.13-pygments-2.19.1/bin:/nix/store/cdz104lzv2flzyizajg0a8x3ypdqq3ih-python3.13-jupyter-client-8.6.3/bin:/nix/store/hr7xqxkjjilh2yr6czc0j51gnksz5900-python3.13-jupyter-core-5.7.2/bin:/nix/store/7myfn5xfvgmh0dklk1arips6fd8qrhvk-python3.13-jupyter-server-2.15.0/bin:/nix/store/51gry7xz8b78k1yay72bvgyhb6nz8a31-python3.13-jupyter-events-0.11.0/bin:/nix/store/qkccrzam0yfdnakba01x8c6cz04xsc2p-python3.13-jsonschema-4.23.0/bin:/nix/store/j1m4xscq5klkdhrp25lpjd8gzj4cf4np-python3.13-jsonpointer-3.0.0/bin:/nix/store/b570hrqpcdin35axgqmmxfwdphq2r4gb-python3.13-nbformat-5.10.4/bin:/nix/store/4q0jfh1xig6mk9flf3gva24lfa0jmyc2-python3.13-nbconvert-7.16.5/bin:/nix/store/xvrjwrraq9if5rq6r7pwpgr6l3b3rd1a-python3.13-chardet-5.2.0/bin:/nix/store/x9vpj6c9isb2kknsrl0cf67crlr9qspy-python3.13-nbclient-0.10.2/bin:/nix/store/45agw9arky9p60rah7y5dq7wplaysrpm-python3.13-send2trash-1.8.3/bin:/nix/store/bbylkhyx6r1dn12qk683mq0gdmw8gjc3-python3.13-websocket-client-1.8.0/bin:/nix/store/27xw3zii29sp1qflgbgm7rpq2l1z8qcg-python3.13-babel-2.16.0/bin:/nix/store/xgbxmfz0qxwgsnjxp8q408qsi9qfl8n7-python3.13-json5-0.9.28/bin:/nix/store/33g65w5cc9n8fr0hxj84282xmv4l7hyl-git-2.47.2/bin:/nix/store/f04zhapn8n8w6yrd35s8sd9qmjp8g9ry-patchelf-0.15.0/bin:/nix/store/wdap4cr3bnm685f27y9bb6q5b6q18msl-coreutils-9.5/bin:/nix/store/032xw8dchwjipwqh6b3h70yc3mcmsqld-findutils-4.10.0/bin:/nix/store/dd7xqz1qwl0di4zb8rzj7r1ds8np9xqs-diffutils-3.10/bin:/nix/store/bffnm1211li6y431irplzbjbccr0k884-gnused-4.9/bin:/nix/store/4lbfasv335vpk8rbcf3pgkag4rhg8jx8-gnugrep-3.11/bin:/nix/store/xpzl2sf58fqfpl64b1fy1ihxay7k71li-gawk-5.3.1/bin:/nix/store/zlmk040fc3jax9s3gldwp5rfwc1hhajc-gnutar-1.35/bin:/nix/store/chwdy9qaxd13q8zvl0zd5r7ql2q116di-gzip-1.13/bin:/nix/store/hpppxlcfvjzrvvcvhcm47divp65gbwq1-bzip2-1.0.8-bin/bin:/nix/store/y0akgyz13jgxwm968bs8kay47zbxx638-gnumake-4.4.1/bin:/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin:/nix/store/apqwjgbjj646wk2jkzr67l26djamn481-patch-2.7.6/bin:/nix/store/rrv4bd5i7rp2m7j8ix4kl8bzijhh8gd3-xz-5.6.3-bin/bin:/nix/store/qraqns84wjffzd8d3dgbdcyxg41czbd6-file-5.46/bin'
export PATH
PS4='+ '
PYTHONHASHSEED='0'
export PYTHONHASHSEED
PYTHONNOUSERSITE='1'
export PYTHONNOUSERSITE
PYTHONPATH='/nix/store/0hdv53rz22ymihpgl8d3w6hx57sgjl1w-python3.13-pip-24.0/lib/python3.13/site-packages:/nix/store/4nj4l3scr96gcx4jirb3kfv24c4ay1z7-python3-3.13.1/lib/python3.13/site-packages:/nix/store/bhiyf889wb7ljhyi71cacalsldv0wsg5-python3.13-pandas-2.2.3/lib/python3.13/site-packages:/nix/store/x1grjqmng6z1b9wv1r5h9yjllyllrff0-python3.13-numpy-2.2.2/lib/python3.13/site-packages:/nix/store/0y5nf0rmlphykk3z472a843smdxxbs50-python3.13-python-dateutil-2.9.0.post0/lib/python3.13/site-packages:/nix/store/mvga2iq58h2sds36yy2fkyxpyzq0qvrs-python3.13-six-1.17.0/lib/python3.13/site-packages:/nix/store/h7857bfcq70xdcpyfmnrr759i5i627xb-python3.13-pytz-2024.2/lib/python3.13/site-packages:/nix/store/xv2zg2r1hli244w8binpd9vmsi9160k3-python3.13-tzdata-2024.2/lib/python3.13/site-packages:/nix/store/za54dvl4dzwnf2v0d4g4390mdydkrqrc-python3.13-matplotlib-3.10.0/lib/python3.13/site-packages:/nix/store/rf1ymkk13b5lv9r31md2prncbwky4cpb-python3.13-contourpy-1.3.1/lib/python3.13/site-packages:/nix/store/68c0kppyfvd539grq1dh75abpg31wlgp-python3.13-cycler-0.12.1/lib/python3.13/site-packages:/nix/store/2k0k06802k1xl861qd3wjg7ayh3y13da-python3.13-fonttools-4.55.3/lib/python3.13/site-packages:/nix/store/614wql0d1zq734bmghx5cv5b5p19bplw-python3.13-kiwisolver-1.4.8/lib/python3.13/site-packages:/nix/store/ndmp63v9s2lrqm7s43qs9idn9vsj9c7n-python3.13-packaging-24.2/lib/python3.13/site-packages:/nix/store/yrysfds3fc779idwynjkrgsl7z2wf2h5-python3.13-pillow-11.1.0/lib/python3.13/site-packages:/nix/store/9sb7ghnykz3jqlvh65p5mqqqkw2mw4hi-python3.13-pyparsing-3.2.1/lib/python3.13/site-packages:/nix/store/cch4188idqdmvm4rizsgh1cwh8qf50zq-python3.13-tkinter-3.13.1/lib/python3.13/site-packages:/nix/store/xmi4ja2fa1ww22xjqxpghdv0qzyfa5sy-python3.13-seaborn-0.13.2/lib/python3.13/site-packages:/nix/store/p14yhin2mad3vf5rhadxrmxsjxq34bsg-python3.13-plotly-5.24.1/lib/python3.13/site-packages:/nix/store/34kb1rfziw171vrk228hcif8ixp356c7-python3.13-tenacity-9.0.0/lib/python3.13/site-packages:/nix/store/5h070f98azxb90ald9d7zg8i3zlxb7m4-python3.13-kaleido-0.2.1/lib/python3.13/site-packages:/nix/store/b6axcb1d8lm5xzygbfzsr3hpiz72fcfc-python3.13-requests-2.32.3/lib/python3.13/site-packages:/nix/store/ks6h49mzpdv55pch77zhrdph47ycjdq1-python3.13-brotlicffi-1.1.0.0/lib/python3.13/site-packages:/nix/store/pg6nd83aw259p3aai1qjrgj85wnla8if-python3.13-cffi-1.17.1/lib/python3.13/site-packages:/nix/store/2fgpmm4vsd1s24z0n1zapygi59f9vfrj-python3.13-pycparser-2.22/lib/python3.13/site-packages:/nix/store/71lap02vywpax046c5yvvlgmdmnwhkh4-python3.13-certifi-2024.12.14/lib/python3.13/site-packages:/nix/store/q6b50jn7kbbp12vjc7vrl0yvpbw0lq2j-python3.13-charset-normalizer-3.4.1/lib/python3.13/site-packages:/nix/store/q31a83gkf2phyh6jqk5d96qd8cmsw1qf-python3.13-idna-3.10/lib/python3.13/site-packages:/nix/store/9q7iksdybkjni4ppmf13m0wh61b9y2g0-python3.13-urllib3-2.3.0/lib/python3.13/site-packages:/nix/store/pr73qcm86yd5mn65rz8g6m9000k185ly-python3.13-httpx-0.28.1/lib/python3.13/site-packages:/nix/store/dnz7v65sh4ccz9xd7525pjv63bc15nzb-python3.13-anyio-4.8.0/lib/python3.13/site-packages:/nix/store/sgbzshfr1npqn58wzgkn14q6jpfxasci-python3.13-sniffio-1.3.1/lib/python3.13/site-packages:/nix/store/17g9bpd8ndgxf13jsrg8qfd6hcw8kags-python3.13-httpcore-1.0.7/lib/python3.13/site-packages:/nix/store/bwx4nc0kp1c78r8fhdl5038b8av8k755-python3.13-h11-0.14.0/lib/python3.13/site-packages:/nix/store/qvba0avh26rrvbc8i32pywakg27fqpz4-python3.13-jupyterlab-4.3.4/lib/python3.13/site-packages:/nix/store/qspnwaqpyay8raywgv750gm98wd921d2-python3.13-async-lru-2.0.4/lib/python3.13/site-packages:/nix/store/239xgyyl5zqlp784dy67cm3c04dswhnw-python3.13-ipykernel-6.29.5/lib/python3.13/site-packages:/nix/store/qpss3fymdfg16rrpv51bqqrgypa1lna8-python3.13-comm-0.2.2/lib/python3.13/site-packages:/nix/store/rc7njnxqhzp4qwh4q8jzq0q8aw9qvs5j-python3.13-traitlets-5.14.3/lib/python3.13/site-packages:/nix/store/hyxagvvmlxjrmp042cwbvg2kd6rnbdwl-python3.13-ipython-8.31.0/lib/python3.13/site-packages:/nix/store/cj0h656xzn4pp9g5ijqql5ggc3yngxj1-python3.13-decorator-5.1.1/lib/python3.13/site-packages:/nix/store/dh80yr3l7mll9g8s8yyb1l3rrd9gdscx-python3.13-jedi-0.19.2/lib/python3.13/site-packages:/nix/store/qqi8grqmhb3nd2wh2lx1k914r6aj8g3r-python3.13-parso-0.8.4/lib/python3.13/site-packages:/nix/store/667cwz6km12pmlhhmrnfm36hrxsgmg78-python3.13-matplotlib-inline-0.1.7/lib/python3.13/site-packages:/nix/store/rra4nff00752yk2h87riqx8fyh4mfg7f-python3.13-pexpect-4.9.0/lib/python3.13/site-packages:/nix/store/vq76w1kwjc0y2j6z4sw0kadkpv5y3gph-python3.13-ptyprocess-0.7.0/lib/python3.13/site-packages:/nix/store/0a9xx6lwf9w1fs6vdhlgcycgbmp4ksdg-python3.13-prompt-toolkit-3.0.48/lib/python3.13/site-packages:/nix/store/6lyjz40fcxqi8vpkh93jf1agv82ma954-python3.13-wcwidth-0.2.13/lib/python3.13/site-packages:/nix/store/xgawj9ip2cwgx9bc6dapz4x1l5xvpv6q-python3.13-pygments-2.19.1/lib/python3.13/site-packages:/nix/store/7c4j0wyj6wnzyk02vzhic167x15vs6vc-python3.13-stack-data-0.6.3/lib/python3.13/site-packages:/nix/store/72qx9nplkirlcmyi2wa66igv23q9zgzf-python3.13-asttokens-3.0.0/lib/python3.13/site-packages:/nix/store/18iyzqdadnwx6v5zl9djcji4rfv6gn79-python3.13-executing-2.1.0/lib/python3.13/site-packages:/nix/store/mps7mlg1hsb1055kq06b7fpksq6i4rr6-python3.13-pure-eval-0.2.3/lib/python3.13/site-packages:/nix/store/mwz1z70gq4ba5692cnl5q1a2m7vfjmac-python3.13-toml-0.10.2/lib/python3.13/site-packages:/nix/store/cdz104lzv2flzyizajg0a8x3ypdqq3ih-python3.13-jupyter-client-8.6.3/lib/python3.13/site-packages:/nix/store/hr7xqxkjjilh2yr6czc0j51gnksz5900-python3.13-jupyter-core-5.7.2/lib/python3.13/site-packages:/nix/store/2a822a4vmabvhr693z6c71wrgrnsqkjk-python3.13-platformdirs-4.3.6/lib/python3.13/site-packages:/nix/store/lkdjv2r8w08xi0qsyfcd0kabvrs98z68-python3.13-pyzmq-26.2.0/lib/python3.13/site-packages:/nix/store/zj6vbdcabdkldk37yfk74nb5dlz462zf-python3.13-tornado-6.4.2/lib/python3.13/site-packages:/nix/store/3p5j628wny6i044cz91y2cix7wi4ib1n-python3.13-nest-asyncio-1.6.0/lib/python3.13/site-packages:/nix/store/d08alkcv9bmm4hj9bcmn6r8403vapxpy-python3.13-psutil-6.1.1/lib/python3.13/site-packages:/nix/store/jn2ki3j3lgjyry5qj0hbdhd737j2qdhy-python3.13-jinja2-3.1.5/lib/python3.13/site-packages:/nix/store/hiccjcfh76swbk6aafgk58wpbjga2i5d-python3.13-markupsafe-3.0.2/lib/python3.13/site-packages:/nix/store/d0irq6lyxfqb09fgzck06gd704dp8q74-python3.13-jupyter-lsp-2.2.5/lib/python3.13/site-packages:/nix/store/7myfn5xfvgmh0dklk1arips6fd8qrhvk-python3.13-jupyter-server-2.15.0/lib/python3.13/site-packages:/nix/store/cf51nkc0w1jzh2qnllnv8nbqz8xyz2yr-python3.13-argon2-cffi-23.1.0/lib/python3.13/site-packages:/nix/store/l06652prnpacwaxmwh9vj8rcp9s2i8xm-python3.13-argon2-cffi-bindings-21.2.0/lib/python3.13/site-packages:/nix/store/51gry7xz8b78k1yay72bvgyhb6nz8a31-python3.13-jupyter-events-0.11.0/lib/python3.13/site-packages:/nix/store/qkccrzam0yfdnakba01x8c6cz04xsc2p-python3.13-jsonschema-4.23.0/lib/python3.13/site-packages:/nix/store/ww4bglv7j5p34qkfazgq15jmigwn828b-python3.13-attrs-24.3.0/lib/python3.13/site-packages:/nix/store/kdfabs1lmv1yziqz38w4gpicqjslg6wi-python3.13-jsonschema-specifications-2024.10.1/lib/python3.13/site-packages:/nix/store/845hww47fqqrlr7165k0c0c5ndniljwr-python3.13-referencing-0.36.1/lib/python3.13/site-packages:/nix/store/nsng6cqvddj4m7sg5ajm3p3jbsiizhz5-python3.13-rpds-py-0.22.3/lib/python3.13/site-packages:/nix/store/6kpbi4w19hh00im16q0ll1kd3p21dq0c-python3.13-typing-extensions-4.12.2/lib/python3.13/site-packages:/nix/store/67mkpzmnyr4rxnmngw5vimcs98gxs3za-python3.13-python-json-logger-3.2.1/lib/python3.13/site-packages:/nix/store/4g4783bdcja5a70fdwxdm43fcbm1s9h0-python3.13-pyyaml-6.0.2/lib/python3.13/site-packages:/nix/store/krzxb83i8a3yjfvk1pjpk4a4fsarihar-python3.13-rfc3339-validator-0.1.4/lib/python3.13/site-packages:/nix/store/7m7p1qpcinif3ymmca7b7n6c8dxyb4sq-python3.13-rfc3986-validator-0.1.1/lib/python3.13/site-packages:/nix/store/fwv0xa886kprfyhrmyzi5gf25biabr5d-python3.13-fqdn-1.5.1/lib/python3.13/site-packages:/nix/store/zxafyay95mij9bza53sfcwkmdjms1wzr-python3.13-isoduration-20.11.0/lib/python3.13/site-packages:/nix/store/c2cmxjk3ap2n53w0x99id1y2md47mich-python3.13-arrow-1.3.0/lib/python3.13/site-packages:/nix/store/cx04bwxx3aslls362ry80g662lcw2m1r-python3.13-types-python-dateutil-2.9.0.20241206/lib/python3.13/site-packages:/nix/store/j1m4xscq5klkdhrp25lpjd8gzj4cf4np-python3.13-jsonpointer-3.0.0/lib/python3.13/site-packages:/nix/store/4bi5s6gn3zi0qw6nhn9yvb5zpdlw4caa-python3.13-uri-template-1.3.0/lib/python3.13/site-packages:/nix/store/np0cx315qd61ahwxjpxsx077iaki0062-python3.13-webcolors-24.11.1/lib/python3.13/site-packages:/nix/store/s2r9wvpgvqd8xg5s49x97wnzjmblfg2j-python3.13-jupyter-server-terminals-0.5.3/lib/python3.13/site-packages:/nix/store/ghm70s5v58s32sgq03mwq57gcwypmj9v-python3.13-terminado-0.18.1/lib/python3.13/site-packages:/nix/store/b570hrqpcdin35axgqmmxfwdphq2r4gb-python3.13-nbformat-5.10.4/lib/python3.13/site-packages:/nix/store/yagm050fmx8298wjb10slcyir8blq723-python3.13-fastjsonschema-2.19.1/lib/python3.13/site-packages:/nix/store/4q0jfh1xig6mk9flf3gva24lfa0jmyc2-python3.13-nbconvert-7.16.5/lib/python3.13/site-packages:/nix/store/1n88dmmfx0viqr2ha396m77yvjl58bcl-python3.13-beautifulsoup4-4.12.3/lib/python3.13/site-packages:/nix/store/xvrjwrraq9if5rq6r7pwpgr6l3b3rd1a-python3.13-chardet-5.2.0/lib/python3.13/site-packages:/nix/store/08g4n24gzhwjahfydj88d9b8f270xzyi-python3.13-soupsieve-2.6/lib/python3.13/site-packages:/nix/store/bm1cr02kqf8jvk594jcg8rrv189n9bx6-python3.13-bleach-6.2.0/lib/python3.13/site-packages:/nix/store/n5qfv0kyad990vgf8d6y4kz2w0sn55mb-python3.13-html5lib-1.1/lib/python3.13/site-packages:/nix/store/jjbgdi68br3ggc4xij4n65z8mfg0263x-python3.13-webencodings-0.5.1/lib/python3.13/site-packages:/nix/store/36qml3hgkjmrm17j95sla2x3y7vwm9i7-python3.13-setuptools-75.8.0/lib/python3.13/site-packages:/nix/store/rs3zidjw3zz492gnnlzb6z1fbfvfvk2q-python3.13-defusedxml-0.8.0rc2/lib/python3.13/site-packages:/nix/store/6k4dl0y8khw2nvai5k52nhjdx9gjxnys-python3.13-jupyterlab-pygments-0.3.0/lib/python3.13/site-packages:/nix/store/wcmjdkzwdcpf26j2dn34nwadk67hhg7m-python3.13-mistune-3.1.0/lib/python3.13/site-packages:/nix/store/x9vpj6c9isb2kknsrl0cf67crlr9qspy-python3.13-nbclient-0.10.2/lib/python3.13/site-packages:/nix/store/rrkf0dqh91rigs09his4r98w9jcz1h3l-python3.13-pandocfilters-1.5.1/lib/python3.13/site-packages:/nix/store/73vqa8514m4bacq4a3hf7avg9xlzf637-python3.13-tinycss2-1.4.0/lib/python3.13/site-packages:/nix/store/45agw9arky9p60rah7y5dq7wplaysrpm-python3.13-send2trash-1.8.3/lib/python3.13/site-packages:/nix/store/60dazpl505h9b8x2pgwajvmkqbsls5sr-python3.13-prometheus-client-0.21.1/lib/python3.13/site-packages:/nix/store/bbylkhyx6r1dn12qk683mq0gdmw8gjc3-python3.13-websocket-client-1.8.0/lib/python3.13/site-packages:/nix/store/mkhxrg8vvawynjfz7b7hwky9qqdwmd17-python3.13-overrides-7.7.0/lib/python3.13/site-packages:/nix/store/24r1d60161i8a53nxls1n4lgxhz2srd6-python3.13-jupyterlab-server-2.27.3/lib/python3.13/site-packages:/nix/store/27xw3zii29sp1qflgbgm7rpq2l1z8qcg-python3.13-babel-2.16.0/lib/python3.13/site-packages:/nix/store/xgbxmfz0qxwgsnjxp8q408qsi9qfl8n7-python3.13-json5-0.9.28/lib/python3.13/site-packages:/nix/store/7b6lwkbsd8qh57k6mrq9xas7bj25lslm-python3.13-notebook-shim-0.2.4/lib/python3.13/site-packages:/nix/store/v7szc50q1bzgr90idakn8c5nsbvz8yh0-python3.13-scipy-1.15.1/lib/python3.13/site-packages'
export PYTHONPATH
SHELL='/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin/bash'
export SHELL
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
XDG_DATA_DIRS='/nix/store/0hdv53rz22ymihpgl8d3w6hx57sgjl1w-python3.13-pip-24.0/share:/nix/store/4nj4l3scr96gcx4jirb3kfv24c4ay1z7-python3-3.13.1/share:/nix/store/2k0k06802k1xl861qd3wjg7ayh3y13da-python3.13-fonttools-4.55.3/share:/nix/store/qvba0avh26rrvbc8i32pywakg27fqpz4-python3.13-jupyterlab-4.3.4/share:/nix/store/239xgyyl5zqlp784dy67cm3c04dswhnw-python3.13-ipykernel-6.29.5/share:/nix/store/hyxagvvmlxjrmp042cwbvg2kd6rnbdwl-python3.13-ipython-8.31.0/share:/nix/store/4q0jfh1xig6mk9flf3gva24lfa0jmyc2-python3.13-nbconvert-7.16.5/share:/nix/store/6k4dl0y8khw2nvai5k52nhjdx9gjxnys-python3.13-jupyterlab-pygments-0.3.0/share:/nix/store/33g65w5cc9n8fr0hxj84282xmv4l7hyl-git-2.47.2/share:/nix/store/f04zhapn8n8w6yrd35s8sd9qmjp8g9ry-patchelf-0.15.0/share'
export XDG_DATA_DIRS
_PYTHON_HOST_PLATFORM='linux-x86_64'
export _PYTHON_HOST_PLATFORM
_PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_x86_64-linux-gnu'
export _PYTHON_SYSCONFIGDATA_NAME
__structuredAttrs=''
export __structuredAttrs
_substituteStream_has_warned_replace_deprecation='false'
buildInputs=''
export buildInputs
buildPhase='{ echo "------------------------------------------------------------";
  echo " WARNING: the existence of this path is not guaranteed.";
  echo " It is an internal implementation detail for pkgs.mkShell.";
  echo "------------------------------------------------------------";
  echo;
  # Record all build inputs as runtime dependencies
  export;
} >> "$out"
'
export buildPhase
builder='/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
defaultBuildInputs=''
defaultNativeBuildInputs='/nix/store/f04zhapn8n8w6yrd35s8sd9qmjp8g9ry-patchelf-0.15.0 /nix/store/b9qv2l6dy15jy7pvarzjpn0yl33rdrbc-update-autotools-gnu-config-scripts-hook /nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh /nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh /nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh /nix/store/shr47253n0j4c4lpvv6fmlvaq7vfvc3x-no-broken-symlinks.sh /nix/store/q84p4jvn5yalz937azdrfbyy32kl5s16-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh /nix/store/z7k98578dfzi6l3hsvbivzm7hfqlk0zc-set-source-date-epoch-to-latest.sh /nix/store/pilsssjjdxvdphlg2h19p0bfx5q0jzkn-strip.sh'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=('addPythonPath' 'sysconfigdataHook' )
declare -a envBuildHostHooks=('addPythonPath' 'sysconfigdataHook' )
declare -a envBuildTargetHooks=('addPythonPath' 'sysconfigdataHook' )
declare -a envHostHostHooks=()
declare -a envHostTargetHooks=()
declare -a envTargetTargetHooks=()
declare -a fixupOutputHooks=('if [ -z "${dontPatchELF-}" ]; then patchELF "$prefix"; fi' 'if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_moveLib64' '_moveSbin' '_moveSystemdUserUnits' 'patchShebangsAuto' '_pruneLibtoolFiles' '_doStrip' )
guess='22'
initialPath='/nix/store/wdap4cr3bnm685f27y9bb6q5b6q18msl-coreutils-9.5 /nix/store/032xw8dchwjipwqh6b3h70yc3mcmsqld-findutils-4.10.0 /nix/store/dd7xqz1qwl0di4zb8rzj7r1ds8np9xqs-diffutils-3.10 /nix/store/bffnm1211li6y431irplzbjbccr0k884-gnused-4.9 /nix/store/4lbfasv335vpk8rbcf3pgkag4rhg8jx8-gnugrep-3.11 /nix/store/xpzl2sf58fqfpl64b1fy1ihxay7k71li-gawk-5.3.1 /nix/store/zlmk040fc3jax9s3gldwp5rfwc1hhajc-gnutar-1.35 /nix/store/chwdy9qaxd13q8zvl0zd5r7ql2q116di-gzip-1.13 /nix/store/hpppxlcfvjzrvvcvhcm47divp65gbwq1-bzip2-1.0.8-bin /nix/store/y0akgyz13jgxwm968bs8kay47zbxx638-gnumake-4.4.1 /nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37 /nix/store/apqwjgbjj646wk2jkzr67l26djamn481-patch-2.7.6 /nix/store/rrv4bd5i7rp2m7j8ix4kl8bzijhh8gd3-xz-5.6.3-bin /nix/store/qraqns84wjffzd8d3dgbdcyxg41czbd6-file-5.46'
mesonFlags=''
export mesonFlags
name='nix-shell-env'
export name
nativeBuildInputs='/nix/store/10fblj4nfdhkicvdp2pjhsm0ypg6r6kc-venv-shell-hook /nix/store/0hdv53rz22ymihpgl8d3w6hx57sgjl1w-python3.13-pip-24.0 /nix/store/bhiyf889wb7ljhyi71cacalsldv0wsg5-python3.13-pandas-2.2.3 /nix/store/x1grjqmng6z1b9wv1r5h9yjllyllrff0-python3.13-numpy-2.2.2 /nix/store/za54dvl4dzwnf2v0d4g4390mdydkrqrc-python3.13-matplotlib-3.10.0 /nix/store/xmi4ja2fa1ww22xjqxpghdv0qzyfa5sy-python3.13-seaborn-0.13.2 /nix/store/p14yhin2mad3vf5rhadxrmxsjxq34bsg-python3.13-plotly-5.24.1 /nix/store/b6axcb1d8lm5xzygbfzsr3hpiz72fcfc-python3.13-requests-2.32.3 /nix/store/pr73qcm86yd5mn65rz8g6m9000k185ly-python3.13-httpx-0.28.1 /nix/store/qvba0avh26rrvbc8i32pywakg27fqpz4-python3.13-jupyterlab-4.3.4 /nix/store/hyxagvvmlxjrmp042cwbvg2kd6rnbdwl-python3.13-ipython-8.31.0 /nix/store/v7szc50q1bzgr90idakn8c5nsbvz8yh0-python3.13-scipy-1.15.1 /nix/store/4g4783bdcja5a70fdwxdm43fcbm1s9h0-python3.13-pyyaml-6.0.2 /nix/store/33g65w5cc9n8fr0hxj84282xmv4l7hyl-git-2.47.2'
export nativeBuildInputs
out='/home/zak/work/hbc/boost/hr-py/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='buildPhase'
export phases
pkg='/nix/store/pilsssjjdxvdphlg2h19p0bfx5q0jzkn-strip.sh'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/10fblj4nfdhkicvdp2pjhsm0ypg6r6kc-venv-shell-hook' '/nix/store/p5wl27pf4c4m0qn6sw31c64kzhk89ww1-ensure-newer-sources-hook' '/nix/store/0hdv53rz22ymihpgl8d3w6hx57sgjl1w-python3.13-pip-24.0' '/nix/store/4nj4l3scr96gcx4jirb3kfv24c4ay1z7-python3-3.13.1' '/nix/store/bhiyf889wb7ljhyi71cacalsldv0wsg5-python3.13-pandas-2.2.3' '/nix/store/x1grjqmng6z1b9wv1r5h9yjllyllrff0-python3.13-numpy-2.2.2' '/nix/store/0y5nf0rmlphykk3z472a843smdxxbs50-python3.13-python-dateutil-2.9.0.post0' '/nix/store/mvga2iq58h2sds36yy2fkyxpyzq0qvrs-python3.13-six-1.17.0' '/nix/store/h7857bfcq70xdcpyfmnrr759i5i627xb-python3.13-pytz-2024.2' '/nix/store/xv2zg2r1hli244w8binpd9vmsi9160k3-python3.13-tzdata-2024.2' '/nix/store/za54dvl4dzwnf2v0d4g4390mdydkrqrc-python3.13-matplotlib-3.10.0' '/nix/store/rf1ymkk13b5lv9r31md2prncbwky4cpb-python3.13-contourpy-1.3.1' '/nix/store/68c0kppyfvd539grq1dh75abpg31wlgp-python3.13-cycler-0.12.1' '/nix/store/2k0k06802k1xl861qd3wjg7ayh3y13da-python3.13-fonttools-4.55.3' '/nix/store/614wql0d1zq734bmghx5cv5b5p19bplw-python3.13-kiwisolver-1.4.8' '/nix/store/ndmp63v9s2lrqm7s43qs9idn9vsj9c7n-python3.13-packaging-24.2' '/nix/store/yrysfds3fc779idwynjkrgsl7z2wf2h5-python3.13-pillow-11.1.0' '/nix/store/9sb7ghnykz3jqlvh65p5mqqqkw2mw4hi-python3.13-pyparsing-3.2.1' '/nix/store/cch4188idqdmvm4rizsgh1cwh8qf50zq-python3.13-tkinter-3.13.1' '/nix/store/xmi4ja2fa1ww22xjqxpghdv0qzyfa5sy-python3.13-seaborn-0.13.2' '/nix/store/p14yhin2mad3vf5rhadxrmxsjxq34bsg-python3.13-plotly-5.24.1' '/nix/store/34kb1rfziw171vrk228hcif8ixp356c7-python3.13-tenacity-9.0.0' '/nix/store/5h070f98azxb90ald9d7zg8i3zlxb7m4-python3.13-kaleido-0.2.1' '/nix/store/b6axcb1d8lm5xzygbfzsr3hpiz72fcfc-python3.13-requests-2.32.3' '/nix/store/ks6h49mzpdv55pch77zhrdph47ycjdq1-python3.13-brotlicffi-1.1.0.0' '/nix/store/pg6nd83aw259p3aai1qjrgj85wnla8if-python3.13-cffi-1.17.1' '/nix/store/2fgpmm4vsd1s24z0n1zapygi59f9vfrj-python3.13-pycparser-2.22' '/nix/store/71lap02vywpax046c5yvvlgmdmnwhkh4-python3.13-certifi-2024.12.14' '/nix/store/q6b50jn7kbbp12vjc7vrl0yvpbw0lq2j-python3.13-charset-normalizer-3.4.1' '/nix/store/q31a83gkf2phyh6jqk5d96qd8cmsw1qf-python3.13-idna-3.10' '/nix/store/9q7iksdybkjni4ppmf13m0wh61b9y2g0-python3.13-urllib3-2.3.0' '/nix/store/pr73qcm86yd5mn65rz8g6m9000k185ly-python3.13-httpx-0.28.1' '/nix/store/dnz7v65sh4ccz9xd7525pjv63bc15nzb-python3.13-anyio-4.8.0' '/nix/store/sgbzshfr1npqn58wzgkn14q6jpfxasci-python3.13-sniffio-1.3.1' '/nix/store/17g9bpd8ndgxf13jsrg8qfd6hcw8kags-python3.13-httpcore-1.0.7' '/nix/store/bwx4nc0kp1c78r8fhdl5038b8av8k755-python3.13-h11-0.14.0' '/nix/store/qvba0avh26rrvbc8i32pywakg27fqpz4-python3.13-jupyterlab-4.3.4' '/nix/store/qspnwaqpyay8raywgv750gm98wd921d2-python3.13-async-lru-2.0.4' '/nix/store/239xgyyl5zqlp784dy67cm3c04dswhnw-python3.13-ipykernel-6.29.5' '/nix/store/qpss3fymdfg16rrpv51bqqrgypa1lna8-python3.13-comm-0.2.2' '/nix/store/rc7njnxqhzp4qwh4q8jzq0q8aw9qvs5j-python3.13-traitlets-5.14.3' '/nix/store/hyxagvvmlxjrmp042cwbvg2kd6rnbdwl-python3.13-ipython-8.31.0' '/nix/store/cj0h656xzn4pp9g5ijqql5ggc3yngxj1-python3.13-decorator-5.1.1' '/nix/store/dh80yr3l7mll9g8s8yyb1l3rrd9gdscx-python3.13-jedi-0.19.2' '/nix/store/qqi8grqmhb3nd2wh2lx1k914r6aj8g3r-python3.13-parso-0.8.4' '/nix/store/667cwz6km12pmlhhmrnfm36hrxsgmg78-python3.13-matplotlib-inline-0.1.7' '/nix/store/rra4nff00752yk2h87riqx8fyh4mfg7f-python3.13-pexpect-4.9.0' '/nix/store/vq76w1kwjc0y2j6z4sw0kadkpv5y3gph-python3.13-ptyprocess-0.7.0' '/nix/store/0a9xx6lwf9w1fs6vdhlgcycgbmp4ksdg-python3.13-prompt-toolkit-3.0.48' '/nix/store/6lyjz40fcxqi8vpkh93jf1agv82ma954-python3.13-wcwidth-0.2.13' '/nix/store/xgawj9ip2cwgx9bc6dapz4x1l5xvpv6q-python3.13-pygments-2.19.1' '/nix/store/7c4j0wyj6wnzyk02vzhic167x15vs6vc-python3.13-stack-data-0.6.3' '/nix/store/72qx9nplkirlcmyi2wa66igv23q9zgzf-python3.13-asttokens-3.0.0' '/nix/store/18iyzqdadnwx6v5zl9djcji4rfv6gn79-python3.13-executing-2.1.0' '/nix/store/mps7mlg1hsb1055kq06b7fpksq6i4rr6-python3.13-pure-eval-0.2.3' '/nix/store/mwz1z70gq4ba5692cnl5q1a2m7vfjmac-python3.13-toml-0.10.2' '/nix/store/cdz104lzv2flzyizajg0a8x3ypdqq3ih-python3.13-jupyter-client-8.6.3' '/nix/store/hr7xqxkjjilh2yr6czc0j51gnksz5900-python3.13-jupyter-core-5.7.2' '/nix/store/2a822a4vmabvhr693z6c71wrgrnsqkjk-python3.13-platformdirs-4.3.6' '/nix/store/lkdjv2r8w08xi0qsyfcd0kabvrs98z68-python3.13-pyzmq-26.2.0' '/nix/store/zj6vbdcabdkldk37yfk74nb5dlz462zf-python3.13-tornado-6.4.2' '/nix/store/3p5j628wny6i044cz91y2cix7wi4ib1n-python3.13-nest-asyncio-1.6.0' '/nix/store/d08alkcv9bmm4hj9bcmn6r8403vapxpy-python3.13-psutil-6.1.1' '/nix/store/jn2ki3j3lgjyry5qj0hbdhd737j2qdhy-python3.13-jinja2-3.1.5' '/nix/store/hiccjcfh76swbk6aafgk58wpbjga2i5d-python3.13-markupsafe-3.0.2' '/nix/store/d0irq6lyxfqb09fgzck06gd704dp8q74-python3.13-jupyter-lsp-2.2.5' '/nix/store/7myfn5xfvgmh0dklk1arips6fd8qrhvk-python3.13-jupyter-server-2.15.0' '/nix/store/cf51nkc0w1jzh2qnllnv8nbqz8xyz2yr-python3.13-argon2-cffi-23.1.0' '/nix/store/l06652prnpacwaxmwh9vj8rcp9s2i8xm-python3.13-argon2-cffi-bindings-21.2.0' '/nix/store/51gry7xz8b78k1yay72bvgyhb6nz8a31-python3.13-jupyter-events-0.11.0' '/nix/store/qkccrzam0yfdnakba01x8c6cz04xsc2p-python3.13-jsonschema-4.23.0' '/nix/store/ww4bglv7j5p34qkfazgq15jmigwn828b-python3.13-attrs-24.3.0' '/nix/store/kdfabs1lmv1yziqz38w4gpicqjslg6wi-python3.13-jsonschema-specifications-2024.10.1' '/nix/store/845hww47fqqrlr7165k0c0c5ndniljwr-python3.13-referencing-0.36.1' '/nix/store/nsng6cqvddj4m7sg5ajm3p3jbsiizhz5-python3.13-rpds-py-0.22.3' '/nix/store/6kpbi4w19hh00im16q0ll1kd3p21dq0c-python3.13-typing-extensions-4.12.2' '/nix/store/67mkpzmnyr4rxnmngw5vimcs98gxs3za-python3.13-python-json-logger-3.2.1' '/nix/store/4g4783bdcja5a70fdwxdm43fcbm1s9h0-python3.13-pyyaml-6.0.2' '/nix/store/krzxb83i8a3yjfvk1pjpk4a4fsarihar-python3.13-rfc3339-validator-0.1.4' '/nix/store/7m7p1qpcinif3ymmca7b7n6c8dxyb4sq-python3.13-rfc3986-validator-0.1.1' '/nix/store/fwv0xa886kprfyhrmyzi5gf25biabr5d-python3.13-fqdn-1.5.1' '/nix/store/zxafyay95mij9bza53sfcwkmdjms1wzr-python3.13-isoduration-20.11.0' '/nix/store/c2cmxjk3ap2n53w0x99id1y2md47mich-python3.13-arrow-1.3.0' '/nix/store/cx04bwxx3aslls362ry80g662lcw2m1r-python3.13-types-python-dateutil-2.9.0.20241206' '/nix/store/j1m4xscq5klkdhrp25lpjd8gzj4cf4np-python3.13-jsonpointer-3.0.0' '/nix/store/4bi5s6gn3zi0qw6nhn9yvb5zpdlw4caa-python3.13-uri-template-1.3.0' '/nix/store/np0cx315qd61ahwxjpxsx077iaki0062-python3.13-webcolors-24.11.1' '/nix/store/s2r9wvpgvqd8xg5s49x97wnzjmblfg2j-python3.13-jupyter-server-terminals-0.5.3' '/nix/store/ghm70s5v58s32sgq03mwq57gcwypmj9v-python3.13-terminado-0.18.1' '/nix/store/b570hrqpcdin35axgqmmxfwdphq2r4gb-python3.13-nbformat-5.10.4' '/nix/store/yagm050fmx8298wjb10slcyir8blq723-python3.13-fastjsonschema-2.19.1' '/nix/store/4q0jfh1xig6mk9flf3gva24lfa0jmyc2-python3.13-nbconvert-7.16.5' '/nix/store/1n88dmmfx0viqr2ha396m77yvjl58bcl-python3.13-beautifulsoup4-4.12.3' '/nix/store/xvrjwrraq9if5rq6r7pwpgr6l3b3rd1a-python3.13-chardet-5.2.0' '/nix/store/08g4n24gzhwjahfydj88d9b8f270xzyi-python3.13-soupsieve-2.6' '/nix/store/bm1cr02kqf8jvk594jcg8rrv189n9bx6-python3.13-bleach-6.2.0' '/nix/store/n5qfv0kyad990vgf8d6y4kz2w0sn55mb-python3.13-html5lib-1.1' '/nix/store/jjbgdi68br3ggc4xij4n65z8mfg0263x-python3.13-webencodings-0.5.1' '/nix/store/36qml3hgkjmrm17j95sla2x3y7vwm9i7-python3.13-setuptools-75.8.0' '/nix/store/rs3zidjw3zz492gnnlzb6z1fbfvfvk2q-python3.13-defusedxml-0.8.0rc2' '/nix/store/6k4dl0y8khw2nvai5k52nhjdx9gjxnys-python3.13-jupyterlab-pygments-0.3.0' '/nix/store/wcmjdkzwdcpf26j2dn34nwadk67hhg7m-python3.13-mistune-3.1.0' '/nix/store/x9vpj6c9isb2kknsrl0cf67crlr9qspy-python3.13-nbclient-0.10.2' '/nix/store/rrkf0dqh91rigs09his4r98w9jcz1h3l-python3.13-pandocfilters-1.5.1' '/nix/store/73vqa8514m4bacq4a3hf7avg9xlzf637-python3.13-tinycss2-1.4.0' '/nix/store/45agw9arky9p60rah7y5dq7wplaysrpm-python3.13-send2trash-1.8.3' '/nix/store/60dazpl505h9b8x2pgwajvmkqbsls5sr-python3.13-prometheus-client-0.21.1' '/nix/store/bbylkhyx6r1dn12qk683mq0gdmw8gjc3-python3.13-websocket-client-1.8.0' '/nix/store/mkhxrg8vvawynjfz7b7hwky9qqdwmd17-python3.13-overrides-7.7.0' '/nix/store/24r1d60161i8a53nxls1n4lgxhz2srd6-python3.13-jupyterlab-server-2.27.3' '/nix/store/27xw3zii29sp1qflgbgm7rpq2l1z8qcg-python3.13-babel-2.16.0' '/nix/store/xgbxmfz0qxwgsnjxp8q408qsi9qfl8n7-python3.13-json5-0.9.28' '/nix/store/7b6lwkbsd8qh57k6mrq9xas7bj25lslm-python3.13-notebook-shim-0.2.4' '/nix/store/v7szc50q1bzgr90idakn8c5nsbvz8yh0-python3.13-scipy-1.15.1' '/nix/store/33g65w5cc9n8fr0hxj84282xmv4l7hyl-git-2.47.2' '/nix/store/f04zhapn8n8w6yrd35s8sd9qmjp8g9ry-patchelf-0.15.0' '/nix/store/b9qv2l6dy15jy7pvarzjpn0yl33rdrbc-update-autotools-gnu-config-scripts-hook' '/nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh' '/nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh' '/nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh' '/nix/store/shr47253n0j4c4lpvv6fmlvaq7vfvc3x-no-broken-symlinks.sh' '/nix/store/q84p4jvn5yalz937azdrfbyy32kl5s16-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh' '/nix/store/z7k98578dfzi6l3hsvbivzm7hfqlk0zc-set-source-date-epoch-to-latest.sh' '/nix/store/pilsssjjdxvdphlg2h19p0bfx5q0jzkn-strip.sh' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=()
declare -a pkgsHostTarget=()
declare -a pkgsTargetTarget=()
declare -a postFixupHooks=('_makeSymlinksRelativeInAllOutputs' '_multioutPropagateDev' 'noBrokenSymlinksInAllOutputs' )
postShellHook='venvVersionWarn() {
	local venvVersion
	venvVersion="$("$venvDir/bin/python" -c '\''import platform; print(platform.python_version())'\'')"

	[[ "$venvVersion" == "3.13.1" ]] && return

	cat <<EOF
Warning: Python version mismatch: [$venvVersion (venv)] != [3.13.1]
         Delete '\''$venvDir'\'' and reload to rebuild for version 3.13.1
EOF
}

venvVersionWarn
'
export postShellHook
declare -a postUnpackHooks=('_ensureNewerSources' '_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' )
preConfigurePhases=' updateAutotoolsGnuConfigScriptsPhase'
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
preferLocalBuild='1'
export preferLocalBuild
prefix='/home/zak/work/hbc/boost/hr-py/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
shell='/nix/store/fd118hwh7d1ncib4mdw56ylv3g9k0iyj-bash-5.2p37/bin/bash'
export shell
shellHook='venvShellHook'
export shellHook
stdenv='/nix/store/wr2g12zjwngip349s7ryiaz67j58zlfl-stdenv-linux'
export stdenv
strictDeps=''
export strictDeps
system='x86_64-linux'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
venvDir='.venv'
export venvDir
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    export system pname name version;
    while IFS='' read -r varName; do
        nixTalkativeLog "@${varName}@ -> ${!varName}";
        args+=("--subst-var" "$varName");
    done < <(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }')
}
_assignFirst ()
{
 
    local varName="$1";
    local _var;
    local REMOVE=REMOVE;
    shift;
    for _var in "$@";
    do
        if [ -n "${!_var-}" ]; then
            eval "${varName}"="${_var}";
            return;
        fi;
    done;
    echo;
    echo "error: _assignFirst: could not find a non-empty variable whose name to assign to ${varName}.";
    echo "       The following variables were all unset or empty:";
    echo "           $*";
    if [ -z "${out:-}" ]; then
        echo '       If you do not want an "out" output in your derivation, make sure to define';
        echo '       the other specific required outputs. This can be achieved by picking one';
        echo "       of the above as an output.";
        echo '       You do not have to remove "out" if you want to have a different default';
        echo '       output, because the first output is taken as a default.';
        echo;
    fi;
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        nixTalkativeLog "calling implicit '$hookName' function hook";
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            nixTalkativeLog "sourcing implicit '$hookName' script hook";
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                nixTalkativeLog "evaling implicit '$hookName' string hook";
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    local destination;
    if [ -d "$fn" ]; then
        destination="$(stripHash "$fn")";
        if [ -e "$destination" ]; then
            echo "Cannot copy $fn to $destination: destination already exists!";
            echo "Did you specify two \"srcs\" with the same \"name\"?";
            return 1;
        fi;
        cp -r --preserve=mode,timestamps --reflink=auto -- "$fn" "$destination";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                ( XZ_OPT="--threads=$NIX_BUILD_CORES" xz -d < "$fn";
                true ) | tar xf - --mode=+w --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --mode=+w --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList[*]:-lib lib32 lib64 libexec bin sbin Applications Library/Frameworks};
    stripDebugListTarget=${stripDebugListTarget[*]:-};
    stripAllList=${stripAllList[*]:-};
    stripAllListTarget=${stripAllListTarget[*]:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null 1>&2; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags[*]:--S -p}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags[*]:--s -p}";
    done
}
_ensureNewerSources ()
{
 
    local r=$sourceRoot;
    [[ $r == -* ]] && r="./$r";
    '/nix/store/032xw8dchwjipwqh6b3h70yc3mcmsqld-findutils-4.10.0/bin/find' "$r" '!' -newermt '1980-01-01' -exec touch -h -d '1980-01-02' '{}' '+'
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_logHook ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]]; then
        return;
    fi;
    local hookKind="$1";
    local hookExpr="$2";
    shift 2;
    if declare -F "$hookExpr" > /dev/null 2>&1; then
        nixTalkativeLog "calling '$hookKind' function hook '$hookExpr'" "$@";
    else
        if type -p "$hookExpr" > /dev/null; then
            nixTalkativeLog "sourcing '$hookKind' script hook '$hookExpr'";
        else
            if [[ "$hookExpr" != "_callImplicitHook"* ]]; then
                local exprToOutput;
                if [[ ${NIX_DEBUG:-0} -ge 5 ]]; then
                    exprToOutput="$hookExpr";
                else
                    local hookExprLine;
                    while IFS= read -r hookExprLine; do
                        hookExprLine="${hookExprLine#"${hookExprLine%%[![:space:]]*}"}";
                        if [[ -n "$hookExprLine" ]]; then
                            exprToOutput+="$hookExprLine\\n ";
                        fi;
                    done <<< "$hookExpr";
                    exprToOutput="${exprToOutput%%\\n }";
                fi;
                nixTalkativeLog "evaling '$hookKind' string hook '$exprToOutput'";
            fi;
        fi;
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ "${dontRewriteSymlinks-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_makeSymlinksRelativeInAllOutputs ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" _makeSymlinksRelative;
    done
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        if [ -z "${forceShare-}" ]; then
            forceShare=(man doc info);
        fi;
    else
        forceShare=(${forceShare:-man doc info});
    fi;
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in "${forceShare[@]}";
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "${shareDocName:-}" ]; then
        local confScript="${configureScript:-}";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    prependToVar configureFlags --bindir="${!outputBin}"/bin --sbindir="${!outputBin}"/sbin --includedir="${!outputInclude}"/include --oldincludedir="${!outputInclude}"/include --mandir="${!outputMan}"/share/man --infodir="${!outputInfo}"/share/info --docdir="${!outputDoc}"/share/doc/"${shareDocName}" --libdir="${!outputLib}"/lib --libexecdir="${!outputLib}"/libexec --localedir="${!outputLib}"/share/locale;
    prependToVar installFlags pkgconfigdir="${!outputDev}"/lib/pkgconfig m4datadir="${!outputDev}"/share/aclocal aclocaldir="${!outputDev}"/share/aclocal
}
_multioutDevs ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$(getAllOutputNames)" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $(getAllOutputNames);
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_nixLogWithLevel ()
{
 
    [[ -z ${NIX_LOG_FD-} || ${NIX_DEBUG:-0} -lt ${1:?} ]] && return 0;
    local logLevel;
    case "${1:?}" in 
        0)
            logLevel=ERROR
        ;;
        1)
            logLevel=WARN
        ;;
        2)
            logLevel=NOTICE
        ;;
        3)
            logLevel=INFO
        ;;
        4)
            logLevel=TALKATIVE
        ;;
        5)
            logLevel=CHATTY
        ;;
        6)
            logLevel=DEBUG
        ;;
        7)
            logLevel=VOMIT
        ;;
        *)
            echo "_nixLogWithLevel: called with invalid log level: ${1:?}" >&"$NIX_LOG_FD";
            return 1
        ;;
    esac;
    local callerName="${FUNCNAME[2]}";
    if [[ $callerName == "_callImplicitHook" ]]; then
        callerName="${hookName:?}";
    fi;
    printf "%s: %s: %s\n" "$logLevel" "$callerName" "${2:?}" >&"$NIX_LOG_FD"
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    if [ -f "$pkg" ]; then
        nixTalkativeLog "sourcing setup hook '$pkg'";
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        nixTalkativeLog "sourcing setup hook '$pkg/nix-support/setup-hook'";
        source "$pkg/nix-support/setup-hook";
    fi
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addPythonPath ()
{
 
    addToSearchPathWithCustomDelimiter : PYTHONPATH $1/lib/python3.13/site-packages
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
appendToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if type=$(declare -p "$1" 2> /dev/null); then
        case "${type#* }" in 
            -A*)
                echo "appendToVar(): ERROR: trying to use appendToVar on an associative array, use variable+=([\"X\"]=\"Y\") instead." 1>&2;
                return 1
            ;;
            -a*)
                useArray=true
            ;;
            *)
                useArray=false
            ;;
        esac;
    fi;
    shift;
    if $useArray; then
        nameref=(${nameref+"${nameref[@]}"} "$@");
    else
        nameref="${nameref-} $*";
    fi
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "checking for references to $TMPDIR/ in $dir...";
    local i;
    find "$dir" -type f -print0 | while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done
}
buildPhase ()
{
 
    runHook preBuild;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom buildPhase, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
        concatTo flagsArray makeFlags makeFlagsArray buildFlags buildFlagsArray;
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget="check";
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget="test";
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
        concatTo flagsArray makeFlags makeFlagsArray checkFlags=VERBOSE=y checkFlagsArray checkTarget;
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
concatStringsSep ()
{
 
    local sep="$1";
    local name="$2";
    local type oldifs;
    if type=$(declare -p "$name" 2> /dev/null); then
        local -n nameref="$name";
        case "${type#* }" in 
            -A*)
                echo "concatStringsSep(): ERROR: trying to use concatStringsSep on an associative array." 1>&2;
                return 1
            ;;
            -a*)
                local IFS="$(printf '\036')"
            ;;
            *)
                local IFS=" "
            ;;
        esac;
        local ifs_separated="${nameref[*]}";
        echo -n "${ifs_separated//"$IFS"/"$sep"}";
    fi
}
concatTo ()
{
 
    local -;
    set -o noglob;
    local -n targetref="$1";
    shift;
    local arg default name type;
    for arg in "$@";
    do
        IFS="=" read -r name default <<< "$arg";
        local -n nameref="$name";
        if [[ -z "${nameref[*]}" && -n "$default" ]]; then
            targetref+=("$default");
        else
            if type=$(declare -p "$name" 2> /dev/null); then
                case "${type#* }" in 
                    -A*)
                        echo "concatTo(): ERROR: trying to use concatTo on an associative array." 1>&2;
                        return 1
                    ;;
                    -a*)
                        targetref+=("${nameref[@]}")
                    ;;
                    *)
                        if [[ "$name" = *"Array" ]]; then
                            nixErrorLog "concatTo(): $name is not declared as array, treating as a singleton. This will become an error in future";
                            targetref+=(${nameref+"${nameref[@]}"});
                        else
                            targetref+=(${nameref-});
                        fi
                    ;;
                esac;
            fi;
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : "${configureScript=}";
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        prependToVar configureFlags "${prefixKey:---prefix=}$prefix";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                prependToVar configureFlags --disable-dependency-tracking;
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                prependToVar configureFlags --disable-static;
            fi;
        fi;
        if [ -z "${dontPatchShebangsInConfigure:-}" ]; then
            patchShebangs --build "$configureScript";
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local -a flagsArray;
        concatTo flagsArray configureFlags configureFlagsArray;
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' "$1"; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=();
    concatTo flagsArray distFlags distFlagsArray distTarget=dist;
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs[*]:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        { 
            install -m 0600 /dev/null "$NIX_BUILD_TOP/env-vars" && export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars"
        } || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case " ${!varSlice-} " in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'${search_path:-}'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w,u-s,g-s "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    recordPropagatedDependencies;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in ${setupHooks[@]};
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
genericBuild ()
{
 
    export GZIP_NO_TIMESTAMPS=1;
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases[*]:-}" ]; then
        phases="${prePhases[*]:-} unpackPhase patchPhase ${preConfigurePhases[*]:-}             configurePhase ${preBuildPhases[*]:-} buildPhase checkPhase             ${preInstallPhases[*]:-} installPhase ${preFixupPhases[*]:-} fixupPhase installCheckPhase             ${preDistPhases[*]:-} distPhase ${postPhases[*]:-}";
    fi;
    for curPhase in ${phases[*]};
    do
        runPhase "$curPhase";
    done
}
getAllOutputNames ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        echo "${!outputs[*]}";
    else
        echo "$outputs";
    fi
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} "${installCheckTarget:-installcheck}" > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
            concatTo flagsArray makeFlags makeFlagsArray installCheckFlags installCheckFlagsArray installCheckTarget=installcheck;
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom installPhase, doing nothing";
        runHook postInstall;
        return;
    else
        foundMakefile=1;
    fi;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(${enableParallelInstalling:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
    concatTo flagsArray makeFlags makeFlagsArray installFlags installFlagsArray installTargets=install;
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $(getAllOutputNames);
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if [ -n "$(find "$srcParent" -maxdepth 0 -type d -empty 2> /dev/null)" ]; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$srcParent" 2> /dev/null || true;
            fi;
        done;
    done
}
nixChattyLog ()
{
 
    _nixLogWithLevel 5 "$*"
}
nixDebugLog ()
{
 
    _nixLogWithLevel 6 "$*"
}
nixErrorLog ()
{
 
    _nixLogWithLevel 0 "$*"
}
nixInfoLog ()
{
 
    _nixLogWithLevel 3 "$*"
}
nixLog ()
{
 
    [[ -z ${NIX_LOG_FD-} ]] && return 0;
    local callerName="${FUNCNAME[1]}";
    if [[ $callerName == "_callImplicitHook" ]]; then
        callerName="${hookName:?}";
    fi;
    printf "%s: %s\n" "$callerName" "$*" >&"$NIX_LOG_FD"
}
nixNoticeLog ()
{
 
    _nixLogWithLevel 2 "$*"
}
nixTalkativeLog ()
{
 
    _nixLogWithLevel 4 "$*"
}
nixVomitLog ()
{
 
    _nixLogWithLevel 7 "$*"
}
nixWarnLog ()
{
 
    _nixLogWithLevel 1 "$*"
}
noBrokenSymlinks ()
{
 
    local -r output="${1:?}";
    local path;
    local pathParent;
    local symlinkTarget;
    local -i numDanglingSymlinks=0;
    local -i numReflexiveSymlinks=0;
    if [[ ! -e $output ]]; then
        nixWarnLog "skipping non-existent output $output";
        return 0;
    fi;
    nixInfoLog "running on $output";
    while IFS= read -r -d '' path; do
        pathParent="$(dirname "$path")";
        symlinkTarget="$(readlink "$path")";
        if [[ $symlinkTarget == /* ]]; then
            nixInfoLog "symlink $path points to absolute target $symlinkTarget";
        else
            nixInfoLog "symlink $path points to relative target $symlinkTarget";
            symlinkTarget="$(realpath --no-symlinks --canonicalize-missing "$pathParent/$symlinkTarget")";
        fi;
        if [[ $symlinkTarget != "$NIX_STORE"/* ]]; then
            nixInfoLog "symlink $path points outside the Nix store; ignoring";
            continue;
        fi;
        if [[ $path == "$symlinkTarget" ]]; then
            nixErrorLog "the symlink $path is reflexive $symlinkTarget";
            numReflexiveSymlinks+=1;
        else
            if [[ ! -e $symlinkTarget ]]; then
                nixErrorLog "the symlink $path points to a missing target $symlinkTarget";
                numDanglingSymlinks+=1;
            else
                nixDebugLog "the symlink $path is irreflexive and points to a target which exists";
            fi;
        fi;
    done < <(find "$output" -type l -print0);
    if ((numDanglingSymlinks > 0 || numReflexiveSymlinks > 0)); then
        nixErrorLog "found $numDanglingSymlinks dangling symlinks and $numReflexiveSymlinks reflexive symlinks";
        exit 1;
    fi;
    return 0
}
noBrokenSymlinksInAllOutputs ()
{
 
    if [[ -z ${dontCheckForBrokenSymlinks-} ]]; then
        for output in $(getAllOutputNames);
        do
            noBrokenSymlinks "${!output}";
        done;
    fi
}
patchELF ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "shrinking RPATHs of ELF executables and libraries in $dir";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if ! isELF "$i"; then
            continue;
        fi;
        echo "shrinking $i";
        patchelf --shrink-rpath "$i" || true;
    done < <(find "$dir" -type f -print0)
}
patchPhase ()
{
 
    runHook prePatch;
    local -a patchesArray;
    concatTo patchesArray patches;
    for i in "${patchesArray[@]}";
    do
        echo "applying patch $i";
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        local -a flagsArray;
        concatTo flagsArray patchFlags=-p1;
        $uncompress < "$i" 2>&1 | patch "${flagsArray[@]}";
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    local update=false;
    while [[ $# -gt 0 ]]; do
        case "$1" in 
            --host)
                pathName=HOST_PATH;
                shift
            ;;
            --build)
                pathName=PATH;
                shift
            ;;
            --update)
                update=true;
                shift
            ;;
            --)
                shift;
                break
            ;;
            -* | --*)
                echo "Unknown option $1 supplied to patchShebangs" 1>&2;
                return 1
            ;;
            *)
                break
            ;;
        esac;
    done;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f" || [ "$oldInterpreterLine" ];
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "${pathName:-}" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-S" ]]; then
                arg0=${args%% *};
                args=${args#* };
                newPath="$(PATH="${!pathName}" type -P "env" || true)";
                args="-S $(PATH="${!pathName}" type -P "$arg0" || true) $args";
            else
                if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                    echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                    exit 1;
                else
                    newPath="$(PATH="${!pathName}" type -P "$arg0" || true)";
                fi;
            fi;
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" type -P "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && ( "$update" == true || "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ) ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0)
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
prependToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if type=$(declare -p "$1" 2> /dev/null); then
        case "${type#* }" in 
            -A*)
                echo "prependToVar(): ERROR: trying to use prependToVar on an associative array." 1>&2;
                return 1
            ;;
            -a*)
                useArray=true
            ;;
            *)
                useArray=false
            ;;
        esac;
    fi;
    shift;
    if $useArray; then
        nameref=("$@" ${nameref+"${nameref[@]}"});
    else
        nameref="$* ${nameref-}";
    fi
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
recordPropagatedDependencies ()
{
 
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _logHook "$hookName" "$hook" "$@";
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _logHook "$hookName" "$hook" "$@";
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
runPhase ()
{
 
    local curPhase="$*";
    if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
        return;
    fi;
    showPhaseHeader "$curPhase";
    dumpVars;
    local startTime endTime;
    startTime=$(date +"%s");
    eval "${!curPhase:-$curPhase}";
    endTime=$(date +"%s");
    showPhaseFooter "$curPhase" "$startTime" "$endTime";
    if [ "$curPhase" = unpackPhase ]; then
        [ -n "${sourceRoot:-}" ] && chmod +x -- "${sourceRoot}";
        cd -- "${sourceRoot:-.}";
    fi
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( H > 0 )) && echo -n "$H hours ";
    (( M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    echo "Running phase: $phase";
    if [[ -z ${NIX_LOG_FD-} ]]; then
        return;
    fi;
    printf "@nix { \"action\": \"setPhase\", \"phase\": \"%s\" }\n" "$phase" >&"$NIX_LOG_FD"
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local excludeFlags=();
    local pathsNew=;
    [ -z "$cmd" ] && echo "stripDirs: Strip command is empty" 1>&2 && exit 1;
    [ -z "$ranlibCmd" ] && echo "stripDirs: Ranlib command is empty" 1>&2 && exit 1;
    local pattern;
    if [ -n "${stripExclude:-}" ]; then
        for pattern in "${stripExclude[@]}";
        do
            excludeFlags+=(-a '!' '(' -name "$pattern" -o -wholename "$prefix/$pattern" ')');
        done;
    fi;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        local striperr;
        striperr="$(mktemp --tmpdir="$TMPDIR" 'striperr.XXXXXX')";
        find $paths -type f "${excludeFlags[@]}" -a '!' -path "$prefix/lib/debug/*" -printf '%D-%i,%p\0' | sort -t, -k1,1 -u -z | cut -d, -f2- -z | xargs -r -0 -n1 -P "$NIX_BUILD_CORES" -- $cmd $stripFlags 2> "$striperr" || exit_code=$?;
        [[ "$exit_code" = 123 || -z "$exit_code" ]] || ( cat "$striperr" 1>&2 && exit 1 );
        rm "$striperr";
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    if ! [[ "${#fileNames[@]}" -gt 0 ]]; then
        echo "substituteInPlace called without any files to operate on (files must come before options!)" 1>&2;
        return 1;
    fi;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        local replace_mode="$1";
        case "$1" in 
            --replace)
                if ! "$_substituteStream_has_warned_replace_deprecation"; then
                    echo "substituteStream() in derivation $name: WARNING: '--replace' is deprecated, use --replace-{fail,warn,quiet}. ($description)" 1>&2;
                    _substituteStream_has_warned_replace_deprecation=true;
                fi;
                replace_mode='--replace-warn'
            ;&
            --replace-quiet | --replace-warn | --replace-fail)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        if [ "$replace_mode" == --replace-warn ]; then
                            printf "substituteStream() in derivation $name: WARNING: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                        else
                            if [ "$replace_mode" == --replace-fail ]; then
                                printf "substituteStream() in derivation $name: ERROR: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                                return 1;
                            fi;
                        fi;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream() in derivation $name: ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream() in derivation $name: ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream() in derivation $name: ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
sysconfigdataHook ()
{
 
    if [ "$1" = '/nix/store/4nj4l3scr96gcx4jirb3kfv24c4ay1z7-python3-3.13.1' ]; then
        export _PYTHON_HOST_PLATFORM='linux-x86_64';
        export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_x86_64-linux-gnu';
    fi
}
toPythonPath ()
{
 
    local paths="$1";
    local result=;
    for i in $paths;
    do
        p="$i/lib/python3.13/site-packages";
        result="${result}${result:+:}$p";
    done;
    echo $result
}
unpackFile ()
{
 
    curSrc="$1";
    echo "unpacking source archive $curSrc";
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local -a srcsArray;
    concatTo srcsArray srcs;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in "${srcsArray[@]}";
    do
        unpackFile "$i";
    done;
    : "${sourceRoot=}";
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateAutotoolsGnuConfigScriptsPhase ()
{
 
    if [ -n "${dontUpdateAutotoolsGnuConfigScripts-}" ]; then
        return;
    fi;
    for script in config.sub config.guess;
    do
        for f in $(find . -type f -name "$script");
        do
            echo "Updating Autotools / GNU config script to a newer upstream version: $f";
            cp -f "/nix/store/3g69kgyhn438bxli7nf202xz6sc3sln9-gnu-config-2024-01-01/$script" "$f";
        done;
    done
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    [[ $path == -* ]] && path="./$path";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ "%p"\0' | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
venvShellHook ()
{
 
    echo "Executing venvHook";
    runHook preShellHook;
    if [ -d "${venvDir}" ]; then
        echo "Skipping venv creation, '${venvDir}' already exists";
        source "${venvDir}/bin/activate";
    else
        echo "Creating new venv environment in path: '${venvDir}'";
        /nix/store/4nj4l3scr96gcx4jirb3kfv24c4ay1z7-python3-3.13.1/bin/python3.13 -m venv "${venvDir}";
        source "${venvDir}/bin/activate";
        runHook postVenvCreation;
    fi;
    runHook postShellHook;
    echo "Finished executing venvShellHook"
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "${shellHook:-}"
